/* +gather_plan_statistics */
WITH
-- параметры (используйте бинды в клиенте):
-- :p_date = DATE '2025-07-31'
-- :p_iin  = '871119350591'

-- базовый набор из halfentry c ранней фильтрацией по дате
ff_base AS (
  SELECT /*+ MATERIALIZE */
         ff.SOURCE_ID,
         ff.ORD_ID,
         ff.INCOM_FL,
         ff.NORD,
         ff.GL_ACCOUNT_ID,
         ff.GM_SUBJECT_ID,
         ff.GM_CURRENCY_ID,
         ff.EXEC_DATE,
         ff.SDOK_SUM,
         ff.SDOK_SUM_NAT,
         NVL(ff.DSCR, ff.DOC) AS operation_name
  FROM dds.RS_GL_HALFENTRY_FL ff
  WHERE ff.DATE_VALUE = :p_date
),

-- субъект только по нужному ИИН и системе RS
subj AS (
  SELECT /*+ MATERIALIZE */
         g.DWH_ID, g.IIN_BIN, g.LONGNAME
  FROM dds.GM_SUBJECT_H g
  WHERE g.GM_SYSTEM_CODE = 'RS'
    AND g.IIN_BIN = :p_iin
),

-- последняя (по OPER_DATE) операция для ключа halfentry
oper AS (
  SELECT /*+ MATERIALIZE */
         l.RS_GL_HALFENTRY_SOURCE_ID,
         l.RS_GL_HALFENTRY_INCOM_FL,
         l.RS_GL_HALFENTRY_NORD,
         /* берём тип операции из записи с максимальной датой */
         CAST(
           MAX( o.RS_GM_OPERTYPE_ID )
           KEEP (DENSE_RANK LAST ORDER BY o.OPER_DATE)
           AS NUMBER
         ) AS RS_GM_OPERTYPE_ID
  FROM dds.RS_DS_HALFENTRY_OPER_L l
  JOIN dds.RS_DS_OPER_FL o
    ON o.SOURCE_ID = l.RS_DS_OPER_SOURCE_ID
   AND o.NJRN      = l.RS_DS_OPER_NJRN
   AND o.DATE_VALUE = :p_date
  WHERE l.DATE_VALUE = :p_date
  GROUP BY
       l.RS_GL_HALFENTRY_SOURCE_ID,
       l.RS_GL_HALFENTRY_INCOM_FL,
       l.RS_GL_HALFENTRY_NORD
),

-- платежка и кэш-ордеры за дату
pd AS (
  SELECT /*+ MATERIALIZE */
         p.SOURCE_ID, p.RS_GM_OPERTYPE_ID, p.REFER
  FROM dds.RS_PD_PAYMENT_FL p
  WHERE p.DATE_VALUE = :p_date
),
cash AS (
  SELECT /*+ MATERIALIZE */
         c.SOURCE_ID, c.PD_OPRCHR_CODE, c.REFER
  FROM dds.RS_PD_ORDCASH_FL c
  WHERE c.DATE_VALUE = :p_date
)

SELECT
  'COLVIR_DEPO'                                  AS SYSTEM,
  ff.GM_CURRENCY_ID                              AS DDEPO_CURRENCY,
  ff.EXEC_DATE                                   AS DDEPO_FROMDATE,
  ff.SDOK_SUM                                    AS oper_sum,
  ff.SDOK_SUM_NAT                                AS oper_sum_nat,
  NVL(pd.REFER, cash.REFER)                      AS refer,
  ff.SOURCE_ID                                   AS trn_id,
  TO_CHAR(ac.ACCOUNT_NUMBER)                     AS id,
  CASE WHEN ff.INCOM_FL = 1 THEN 0 ELSE 1 END    AS DOHOD,
  ff.operation_name                              AS "operation_name",
  g.IIN_BIN                                      AS IIN,
  g.LONGNAME                                     AS NAME,
  dot.LONGNAME                                   AS DOT_LONGNAME,
  sot.LONGNAME                                   AS SOT_LONGNAME,
  pot.LONGNAME                                   AS POT_LONGNAME
FROM ff_base ff
JOIN subj g
  ON g.DWH_ID = ff.GM_SUBJECT_ID            -- узкий набор по ИИН
JOIN dds.GL_ACCOUNT_H ac
  ON ac.DWH_ID = ff.GL_ACCOUNT_ID
 AND ac.GM_SYSTEM_CODE = 'RS'
LEFT JOIN pd
  ON pd.SOURCE_ID = ff.ORD_ID
LEFT JOIN cash
  ON cash.SOURCE_ID = ff.ORD_ID
LEFT JOIN oper
  ON oper.RS_GL_HALFENTRY_SOURCE_ID = ff.SOURCE_ID
 AND oper.RS_GL_HALFENTRY_INCOM_FL  = ff.INCOM_FL
 AND oper.RS_GL_HALFENTRY_NORD      = ff.NORD
LEFT JOIN dds.RS_GM_OPERTYPE_H dot
  ON dot.DWH_ID = oper.RS_GM_OPERTYPE_ID
LEFT JOIN dds.RS_GM_OPERTYPE_H sot
  ON sot.DWH_CODE = cash.PD_OPRCHR_CODE
LEFT JOIN dds.RS_GM_OPERTYPE_H pot
  ON pot.DWH_ID = pd.RS_GM_OPERTYPE_ID
WHERE EXISTS (
  SELECT 1
  FROM dds.RS_DS_CONTRACT_ACCOUNT_L l
  WHERE l.GL_ACCOUNT_ID = ff.GL_ACCOUNT_ID
    AND l.IS_ACTUAL = 'A'
);
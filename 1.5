WITH rc AS (
    SELECT 'Part Advice' AS displ_col, 'A' AS data_col
    UNION ALL SELECT 'Adjustment', 'J'
    UNION ALL SELECT 'Request', 'Q'
    UNION ALL SELECT 'Reversal', 'R'
    UNION ALL SELECT 'Void', 'V'
    UNION ALL SELECT 'Void Request', 'v'
),
filtered_m_transaction AS (
    SELECT *
    FROM nf_way4.m_transaction
    WHERE oper_date_year = 2025
      AND oper_date_month = 7
      AND oper_date_day = 23
),
filtered_entry AS (
    SELECT *
    FROM nf_way4.entry
    WHERE oper_date_year = 2025
      AND oper_date_month = 7
      AND oper_date_day = 23
),
filtered_account AS (
    SELECT *
    FROM nf_way4.account
    WHERE oper_date_year = 2025
      AND oper_date_month = 7
      AND oper_date_day = 23
),
filtered_account_ma AS (
    SELECT *
    FROM nf_way4.account
    WHERE oper_date_year = 2025
      AND oper_date_month = 7
      AND oper_date_day = 23
)
SELECT /*+ MAPJOIN(rc) */
    posting_date,
    card_id,
    trans_date,
    trans_amount,
    trans_curr,
    fee_amount,
    acc_amount,
    end_balance,
    acc_curr,
    tr_type,
    trans_country,
    trans_city,
    trans_details,
    mcc,
    auth_code,
    ret_ref_number,
    dcc
FROM (
    SELECT 
        entry.id AS entry_id,
        entry.posting_date,
        entry.contract_for AS card_id,
        COALESCE(doc.trans_date, m_transaction.posting_date) AS trans_date,
        doc.request_category,
        CASE 
            WHEN m_transaction.service_class = 'I' THEN 0
            ELSE COALESCE(
                SIGN(entry.amount) * ABS(
                    CASE 
                        WHEN doc.request_category = 'J' AND m_transaction.service_class = 'T' 
                             THEN m_transaction.trans_amount
                        ELSE doc.trans_amount
                    END
                ),
                entry.amount
            )
        END AS trans_amount,
        CASE 
            WHEN m_transaction.service_class = 'u' THEN acc_curr.name
            ELSE COALESCE(tc.name, doc.trans_curr)
        END AS trans_curr,
        entry.fee_amount AS fee_amount,
        entry.amount AS acc_amount,
        0 AS end_balance,
        COALESCE(acc_curr.name, account.curr) AS acc_curr,
        SUBSTR(
            CONCAT(
                COALESCE(trans_subtype.name, m_transaction.trans_code),
                ' ',
                rc.displ_col
            ),
            1, 32
        ) AS tr_type,
        doc.trans_country,
        doc.trans_city,
        doc.trans_details,
        doc.sic_code AS mcc,
        doc.auth_code,
        doc.ret_ref_number,
        doc.source_reg_num,
        ma.account_name,
        ma.code,
        m_transaction.service_class,
        m_transaction.posting_db_date,
        CASE
            WHEN (doc.add_info LIKE '%POI_AMOUNT%' AND doc.add_info LIKE '%POI_CURR%')
                 OR (doc.add_info LIKE '%DCC_IND=Y%') THEN 'Y'
            ELSE 'N'
        END AS dcc
    FROM filtered_m_transaction m_transaction
    JOIN filtered_entry entry 
        ON entry.m_transaction__id = m_transaction.id
    JOIN nf_way4.item item 
        ON item.id = entry.item__id
    JOIN filtered_account account 
        ON account.id = item.account__oid
    JOIN nf_way4.opt_acnt_contract_gp acnt_contract
        ON acnt_contract.id = account.acnt_contract__oid
    JOIN nf_way4.account_type account_type_ 
        ON account_type_.id = account.account_type
    LEFT JOIN nf_way4.opt_doc doc 
        ON doc.id = m_transaction.doc__oid
    LEFT JOIN nf_way4.currency acc_curr 
        ON acc_curr.code = account.curr AND acc_curr.amnd_state = 'A'
    LEFT JOIN nf_way4.currency tc 
        ON tc.code = doc.trans_curr AND tc.amnd_state = 'A'
    LEFT JOIN nf_way4.trans_subtype trans_subtype 
        ON trans_subtype.id = m_transaction.trans_subtype
    LEFT JOIN rc 
        ON rc.data_col = m_transaction.request_cat
    LEFT JOIN filtered_account_ma ma 
        ON m_transaction.target_account = ma.id
    WHERE 
        (m_transaction.service_class NOT IN ('L', 'U') 
         OR (m_transaction.service_class = 'u' AND m_transaction.trans_code LIKE 'uP%' 
             AND ma.account_name LIKE 'Cl Unpaid%'))
        AND NOT (m_transaction.service_class IN ('d', 'D') 
                 AND m_transaction.trans_code <> 'D+')
        AND CASE WHEN m_transaction.service_class = 'D' THEN 'P' ELSE account.code END = account.code
        AND (account.is_am_available = 'Y' OR account.code LIKE 'P%' OR account.code = 'F3')
        AND (account_type_.group_name <> 'TECHNICAL' 
             OR (account_type_.group_name = 'TECHNICAL' AND account.code = 'P7'))
) t
WHERE 
    (source_reg_num IS NULL 
     OR (UPPER(source_reg_num) NOT LIKE 'WF_ARST%' 
         AND UPPER(source_reg_num) NOT LIKE 'K2SL%'))
    AND (trans_details IS NULL OR UPPER(trans_details) NOT LIKE 'WF_ARST%')
    AND NOT (request_category <> 'R' AND service_class = 'A' 
             AND (code LIKE 'INST%' OR code IN ('L11', 'L12')))
LIMIT 10;